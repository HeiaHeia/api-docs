{
  "apiVersion":"2",
  "swaggerVersion":"1.2",
  "basePath":"http://localhost:4567/v2",
  "resourcePath":"/training_logs",
  "apis":[
    {
      "path":"/training_logs/{id}",
      "description":"Operations about training logs",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"Find training log entry by ID",
          "notes":"Returns a training log entry based on ID",
          "responseClass":"TrainingLog",
          "nickname":"show",
          "parameters":[
            {
              "name":"id",
              "description":"ID of training log that needs to be fetched",
              "paramType":"path",
              "required":true,
              "allowMultiple":false,
              "dataType":"long"
            }
          ],
          "errorResponses":[
            {
              "code":400,
              "reason":"Invalid ID supplied"
            },
            {
              "code":404,
              "reason":"Record not found"
            }
          ]
        },
        {
          "httpMethod":"PUT",
          "summary":"Update an existing training log",
          "responseClass":"void",
          "nickname":"update",
          "parameters":[
            {
              "name":"id",
              "description":"ID of training log that needs to be updated",
              "paramType":"path",
              "required":true,
              "allowMultiple":false,
              "dataType":"long"
            }
          ],
          "errorResponses":[
            {
              "code":400,
              "reason":"Invalid ID supplied"
            },
            {
              "code":404,
              "reason":"Training log not found"
            },
            {
              "code":405,
              "reason":"Validation exception"
            }
          ]
        }
      ]
    },
    {
      "path":"/training_logs",
      "description":"Operations about training logs",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"Finds training logs",
          "notes":"Multiple status values can be provided with comma separated strings",
          "responseClass":"List[TrainingLog]",
          "nickname":"index",
          "parameters":[
            {
              "name":"status",
              "description":"Status values that need to be considered for filter",
              "paramType":"query",
              "defaultValue":"available",
              "allowableValues":{
                "valueType":"LIST",
                "values":[
                  "regular",
                  "planned"
                ],
                "valueType":"LIST"
              },
              "required":true,
              "allowMultiple":true,
              "dataType":"string"
            }
          ],
          "errorResponses":[
            {
              "code":400,
              "reason":"Invalid status value"
            }
          ]
        },
        {
          "httpMethod":"POST",
          "summary":"Add a new training log",
          "responseClass":"void",
          "nickname":"create",
          "parameters":[
            {
              "description":"Training log date",
              "paramType":"body",
              "required":true,
              "allowMultiple":false,
              "dataType":"Date"
            }
          ],
          "errorResponses":[
            {
              "code":405,
              "reason":"Invalid input"
            }
          ]
        }
      ]
    }
  ],
  "models":{
    "Sport":{
      "id":"Sport",
      "properties":{
        "id":{
          "type":"long",
          "required": true
        },
        "name":{
          "type":"string",
          "required": true
        }
      }
    },
    "SportParam":{
      "id":"SportParam",
      "properties":{
        "id":{
          "type":"long",
          "required": true
        },
        "name":{
          "type":"string",
          "required": true
        }
      }
    },
    "TrainingLog":{
      "id":"TrainingLog",
      "properties":{
        "id":{
          "type":"long",
          "required": true
        },
        "date":{
          "type":"Date",
          "required": true
        },
        "status":{
          "allowableValues":{
            "valueType":"LIST",
            "values":[
              "regular",
              "planned"
            ]
          },
          "description":"training log status",
          "type":"string",
          "required": true
        },
        "sport":{
          "type":"Sport",
          "required": true
        },
        "note":{
          "type":"text"
        },
        "sport_params":{
          "items":{
            "$ref":"SportParam"
          },
          "type":"Array"
        }
      }
    }
  }
}
