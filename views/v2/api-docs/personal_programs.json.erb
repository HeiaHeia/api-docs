{
  "apiVersion":"2",
  "swaggerVersion":"1.2",
  "basePath":"<%= Const::BASE_URL %>/v2",
  "resourcePath":"/personal_programs",
  "apis":[
    {
      "path":"/personal_programs",
      "description":"Operations about personal programs",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"Finds personal programs",
          "responseClass":"List[PersonalProgram]",
          "nickname":"index",
          "parameters":[
            <%= param_year %>,
            <%= param_page %>,
            <%= param_per_page %>,
            {
              "name":"status",
              "paramType":"query",
              "required":true,
              "dataType":"string",
              "defaultValue":"all",
              "allowableValues":{
                "valueType":"LIST",
                "values":["all", "ongoing"]
              }
            }
          ],
          "errorResponses":[
            {
              "code":400,
              "reason":"The request was invalid."
            }
          ]
        },
        {
          "httpMethod":"POST",
          "summary":"Add a new personal program",
          "responseClass":"PersonalProgram",
          "nickname":"create",
          "parameters":[
            <%= param_program_id %>,
            {
              "name":"start_date",
              "paramType":"form",
              "description":"Only monday",
              "required":true,
              "dataType":"Date"
            }
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    {
      "path":"/personal_programs/{id}",
      "description":"Operations about personal programs",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"Find personal program by ID",
          "responseClass":"PersonalProgram",
          "nickname":"show",
          "parameters":[
            {
              "name":"id",
              "description":"The id of the personal program.",
              "paramType":"path",
              "required":true,
              "dataType":"long"
            }
          ],
          "errorResponses":<%= responses(404) %>
        },
        {
          "httpMethod":"DELETE",
          "summary":"Delete personal program entry",
          "responseClass":"void",
          "nickname":"destroy",
          "parameters":[
            {
              "name":"id",
              "description":"ID of personal program that needs to be deleted",
              "paramType":"path",
              "required":true,
              "dataType":"long"
            }
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    <%= erb :'shared/_years.json', { :locals => { :resource => '/personal_programs/years' } } %>,
    <%= erb :'shared/_comment.json', { :locals => { :resource => 'personal_programs/{personal_program_id}' } } %>,
    <%= erb :'shared/_cheer.json', { :locals => { :resource => 'personal_programs/{personal_program_id}' } } %>,
    {
      "path": "/personal_programs/{personal_program_id}/items",
      "description": "Operations about personal programs",
      "operations":[
        {
          "httpMethod": "GET",
          "summary": "Get list of personal program items",
          "responseClass": "List[Item]",
          "nickname": "items_index",
          "parameters":[
            {
              "name": "personal_program_id",
              "description": "The id of the personal program.",
              "paramType": "path",
              "required": true,
              "dataType": "long"
            }
          ],
          "errorResponses": <%= responses(404) %>
        }
      ]
    }
  ],
  "models":<%= models(params[:api_version], 'PersonalProgram', 'Cheer', 'Comment', 'Item') %>
}
