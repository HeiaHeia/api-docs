{
  "apiVersion":"2",
  "swaggerVersion":"1.2",
  "basePath":"<%= Const::BASE_URL %>/v2",
  "resourcePath":"/conversations",
  "apis":[
    {
      "path":"/conversations",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"List of conversations",
          "responseClass":"List[Conversation]",
          "nickname":"index",
          "parameters":[
            {
              "name":"by_conversation",
              "description":"When true also team related conversations are returned",
              "paramType":"query",
              "dataType":"boolean"
            },
            <%= param_page %>,
            <%= param_per_page %>
          ],
          "errorResponses":<%= responses(400) %>
        },
        {
          "httpMethod":"POST",
          "summary":"Create or fetch conversation",
          "responseClass":"Conversation",
          "nickname":"create",
          "parameters":[
            {
              "name":"user_id",
              "description":"The user for whom to create or fetch a conversation. Either this or group_id must be provided",
              "paramType":"form",
              "dataType":"long"
            },
            {
              "name":"group_id",
              "description":"The group for which to create or fetch a conversation. Either this or user_id must be provided",
              "paramType":"form",
              "dataType":"long"
            }
          ],
          "errorResponses":<%= responses(400) %>
        }
      ]
    },
    {
      "path":"/conversations/unread",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"List of unread conversations",
          "responseClass":"List[Conversation]",
          "nickname":"unread_index",
          "parameters":[
            {
              "name":"by_conversation",
              "description":"When true also team related conversations are returned",
              "paramType":"query",
              "dataType":"boolean"
            },
            <%= param_page %>,
            <%= param_per_page %>
          ],
          "errorResponses":<%= responses(400) %>
        }
      ]
    },
    {
      "path":"/conversations/{id}",
      "operations":[
        {
          "httpMethod":"PUT",
          "summary":"Mark as read",
          "responseClass":"Conversation",
          "nickname":"update",
          "parameters":[
            {
              "name":"id",
              "description":"Identifier of the conversation. When by_conversation is omitted or false this is the conversation partner (user) id",
              "paramType":"path",
              "required":"true",
              "dataType":"long"
            },
            {
              "name":"by_conversation",
              "description":"Specifies how the id parameter should be handled",
              "paramType":"query",
              "dataType":"boolean"
            }
          ],
          "errorResponses":<%= responses(400, 404) %>
        },
        {
          "httpMethod":"DELETE",
          "summary":"Delete conversation. Note: This operation is currently not allowed when by_conversation is true",
          "responseClass":"void",
          "nickname":"destroy",
          "parameters":[
            {
              "name":"id",
              "description":"Identifier of the conversation. When by_conversation is omitted or false this is the conversation partner (user) id",
              "paramType":"path",
              "required":"true",
              "dataType":"long"
            },
            {
              "name":"by_conversation",
              "description":"Specifies how the id parameter should be handled",
              "paramType":"query",
              "dataType":"boolean"
            }
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    {
      "path":"/conversations/{id}/messages",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"Get list of messages from conversation.",
          "responseClass":"List[Message]",
          "nickname":"messages_index",
          "parameters":[
            {
              "name":"id",
              "description":"Identifier of the conversation. When by_conversation is omitted or false this is the conversation partner (user) id",
              "paramType":"path",
              "required":"true",
              "dataType":"long"
            },
            {
              "name":"by_conversation",
              "description":"Specifies how the id parameter should be handled",
              "paramType":"query",
              "dataType":"boolean"
            },
            <%= param_page %>,
            <%= param_per_page %>
          ],
          "errorResponses":<%= responses(404) %>
        },
        {
          "httpMethod":"POST",
          "summary":"Create a new message",
          "responseClass":"Message",
          "nickname":"create",
          "parameters":[
            {
              "name":"id",
              "description":"Identifier of the conversation. When by_conversation is omitted or false this is the conversation partner (user) id",
              "paramType":"path",
              "required":"true",
              "dataType":"long"
            },
            {
              "name":"by_conversation",
              "description":"Specifies how the id parameter should be handled",
              "paramType":"query",
              "dataType":"boolean"
            },
            {
              "name":"body",
              "paramType":"form",
              "required":true,
              "dataType":"text",
              "description":"Required if image param blank."
            },
            {
              "name":"image",
              "paramType":"body",
              "dataType":"file",
              "description":"The file, support only .JPEG and .PNG format."
            }
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    }
  ],
  "models":<%= models(params[:api_version], 'Conversation', 'Message') %>
}
