{
  "apiVersion":"2",
  "swaggerVersion":"1.2",
  "basePath":"<%= Const::BASE_URL %>/v2",
  "resourcePath":"/wellness_entries",
  "apis":[
    {
      "path":"/wellness_entries",
      "description":"Operations about wellness entries",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"Finds wellness entries",
          "responseClass":"List[WellnessEntry]",
          "nickname":"index",
          "parameters":[
            <%= param_wellness_entry_status %>,
            <%= param_year %>,
            {
              "name":"date",
              "description":"Only return entries on given date",
              "paramType":"query",
              "dataType":"Date"
            },
            <%= param_page %>,
            <%= param_per_page %>
          ],
          "errorResponses":<%= responses(400) %>
        },
        <%= erb :'shared/wellness_entries/_create.json' %>
      ]
    },
    {
      "path":"/wellness_entries/{id}",
      "description":"Operations about wellness entries",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"Find wellness entry by ID",
          "responseClass":"WellnessEntry",
          "nickname":"show",
          "parameters":[
            {
              "name":"id",
              "description":"The id of the wellness entry.",
              "paramType":"path",
              "required":true,
              "dataType":"long"
            }
          ],
          "errorResponses":<%= responses(404) %>
        },
        {
          "httpMethod":"PUT",
          "summary":"Update an existing wellness entry",
          "responseClass":"WellnessEntry",
          "nickname":"update",
          "parameters":[
            {
              "name":"id",
              "description":"ID of wellness entry that needs to be updated",
              "paramType":"path",
              "required":true,
              "dataType":"long"
            },
            <%= param_date %>,
            <%= param_notes %>,
            {
              "name":"status",
              "dataType":"string",
              "paramType":"form",
              "defaultValue":"regular",
              "allowableValues":{
                "valueType":"LIST",
                "values":[
                  "regular",
                  "planned"
                ]
              }
            },
            {
              "name":"numeric_value",
              "paramType":"form",
              "dataType":"float",
              "description":"Applicable if wellness types has enabled numeric value"
            },
            {
              "name":"bool_value",
              "paramType":"form",
              "dataType":"boolean",
              "description":"Applicable if wellness types has enabled boolean value"
            },
            {
              "name":"private",
              "paramType":"form",
              "dataType":"boolean",
              "description":"By default 'false'"
            }
          ],
          "errorResponses":<%= responses(400, 404) %>
        },
        {
          "httpMethod":"DELETE",
          "summary":"Delete wellness entry",
          "responseClass":"void",
          "nickname":"destroy",
          "parameters":[
            {
              "name":"id",
              "description":"ID of wellness entry that needs to be deleted",
              "paramType":"path",
              "required":true,
              "dataType":"long"
            }
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    <%= erb :'shared/_years.json', { :locals => { :resource => '/wellness_entries/years' } } %>,
    <%= erb :'shared/_comment.json', { :locals => { :resource => 'wellness_entries/{wellness_entry_id}' } } %>,
    <%= erb :'shared/_cheer.json', { :locals => { :resource => 'wellness_entries/{wellness_entry_id}' } } %>
  ],
  "models":<%= models(params[:api_version], 'WellnessEntry', 'WellnessType','Cheer', 'Comment') %>
}
