{
  "apiVersion":"2",
  "swaggerVersion":"1.2",
  "basePath":"<%= Const::BASE_URL %>/v2",
  "resourcePath":"/users",
  "apis":[
    {
      "path":"/users/{id}",
      "description":"Operations about users",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"Find user by ID",
          "responseClass":"User",
          "nickname":"show",
          "parameters":[
            {
              "name":"id",
              "paramType":"path",
              "required":true,
              "dataType":"long"
            }
          ],
          "errorResponses":<%= responses(404) %>
        }
      ]
    },
    {
      "path":"/users/search",
      "description":"Operations about friends",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"Search users",
          "responseClass":"List[CompactUser]",
          "nickname":"search",
          "parameters":[
            {
              "name":"q",
              "paramType":"query",
              "required":true,
              "dataType":"string"
            },
            <%= param_page %>,
            <%= param_per_page %>
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    {
      "path":"/users/invite",
      "description":"Invite people by email",
      "operations":[
        {
          "httpMethod":"POST",
          "summary":"Invite users",
          "responseClass":"void",
          "nickname":"invite",
          "parameters":[
            {
              "name":"email",
              "description":"User email.",
              "paramType":"form",
              "required":true,
              "dataType":"string"
            },
            {
              "name":"subject",
              "paramType":"form",
              "dataType":"string",
              "required":true,
              "description":"Subject of email."
            },
            {
              "name":"message",
              "paramType":"form",
              "dataType":"text",
              "description":"Weâ€™ll add a link to accept your invitation and send some explanatory text."
            }
          ],
          "errorResponses":<%= responses(400) %>
        }
      ]
    },
    {
      "path":"/users/{user_id}/items",
      "description":"Operations about items",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"Items of user specified by user_id",
          "responseClass":"List[Item]",
          "nickname":"items_index",
          "parameters":[
            <%= param_user_id %>,
            <%= param_year %>,
            <%= param_page %>,
            <%= param_per_page %>
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    <%= erb :'shared/_years.json', { :locals => { :resource => '/users/{user_id}/items/years' } } %>,
    {
      "path":"/users/{user_id}/medals",
      "description":"Operations about medals",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"Medals of user specified by user_id",
          "responseClass":"List[Medal]",
          "nickname":"medals_index",
          "parameters":[
            <%= param_user_id %>,
            <%= param_year %>,
            <%= param_page %>,
            <%= param_per_page %>
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    <%= erb :'shared/_years.json', { :locals => { :resource => '/users/{user_id}/medals/years' } } %>,
    {
      "path":"/users/{user_id}/friends",
      "description":"Operations about friends",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"User's friends",
          "responseClass":"List[CompactUser]",
          "nickname":"user_friends",
          "parameters":[
            <%= param_user_id %>,
            <%= param_page %>,
            <%= param_per_page %>
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    {
      "path":"/users/{user_id}/training_goals",
      "description":"Operations about training goals",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"List of user training goals",
          "responseClass":"List[TrainingGoal]",
          "nickname":"training_goals_index",
          "parameters":[
            <%= param_year %>,
            <%= param_page %>,
            <%= param_per_page %>
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    <%= erb :'shared/_years.json', { :locals => { :resource => '/users/{user_id}/training_goals/years' } } %>,
    {
      "path":"/users/{user_id}/weights",
      "description":"Operations about weights",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"List of user weights",
          "responseClass":"List[Weight]",
          "nickname":"weights_index",
          "parameters":[
            <%= param_user_id %>,
            <%= param_year %>,
            <%= param_page %>,
            <%= param_per_page %>
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    <%= erb :'shared/_years.json', { :locals => { :resource => '/users/{user_id}/weights/years' } } %>,
    {
      "path":"/users/{user_id}/sick_days",
      "description":"Operations about sick days",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"List of user sick days",
          "responseClass":"List[SickDay]",
          "nickname":"sick_days_index",
          "parameters":[
            <%= param_user_id %>,
            <%= param_year %>,
            <%= param_page %>,
            <%= param_per_page %>
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    <%= erb :'shared/_years.json', { :locals => { :resource => '/users/{user_id}/sick_days/years' } } %>,
    {
      "path":"/users/{user_id}/free_entries",
      "description":"Operations about free entries",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"List of user free entries",
          "responseClass":"List[FreeEntry]",
          "nickname":"free_entries_index",
          "parameters":[
            <%= param_user_id %>,
            <%= param_year %>,
            <%= param_page %>,
            <%= param_per_page %>
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    <%= erb :'shared/_years.json', { :locals => { :resource => '/users/{user_id}/free_entries/years' } } %>,
    {
      "path":"/users/{user_id}/training_logs",
      "description":"Operations about training logs",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"List of user training logs",
          "responseClass":"List[TrainingLog]",
          "nickname":"training_logs_index",
          "parameters":[
            <%= param_user_id %>,
            <%= param_training_log_status %>,
            <%= param_year %>,
            <%= param_page %>,
            <%= param_per_page %>
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    <%= erb :'shared/_years.json', { :locals => { :resource => '/users/{user_id}/training_logs/years' } } %>,
    {
      "path":"/users/{user_id}/top_sports",
      "description":"Operations about top sports",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"List of user top sports",
          "responseClass":"List[TopSport]",
          "nickname":"top_sports_index",
          "parameters":[
            <%= param_user_id %>,
            <%= param_year %>,
            <%= param_page %>,
            <%= param_per_page %>
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    {
      "path":"/users/{user_id}/top_sports/{id}",
      "description":"Operations about top sports",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"Get a sport statistic by sport id",
          "responseClass":"TopSport",
          "nickname":"show",
          "parameters":[
            <%= param_user_id %>,
            {
              "name":"id",
              "description":"The id of the sport",
              "paramType":"path",
              "required":true,
              "dataType":"long"
            },
            <%= param_year %>
          ],
          "errorResponses":<%= responses(404) %>
        }
      ]
    },
    {
      "path":"/users/{user_id}/weekly_targets",
      "description":"Operations for managing weekly targets",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"List of user's weekly targets",
          "responseClass":"List[WeeklyTarget]",
          "nickname":"weekly_targets_index",
          "parameters":[
            <%= param_user_id %>,
            {
              "name":"since",
              "description":"The year and week number (e.g. 2015-38) since when to return the targets",
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":"weeks",
              "description":"The number of weekly targets to return",
              "paramType": "query",
              "dataType": "int"
            }
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    {
      "path":"/users/{user_id}/wellness_entries",
      "description":"Operations about wellness entries",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"List of user wellness entries",
          "responseClass":"List[WellnessEntry]",
          "nickname":"wellness_entries_index",
          "parameters":[
            <%= param_user_id %>,
            <%= param_wellness_entry_status %>,
            <%= param_year %>,
            <%= param_page %>,
            <%= param_per_page %>
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    <%= erb :'shared/_years.json', { :locals => { :resource => '/users/{user_id}/wellness_entries/years' } } %>

  ],
  "models":<%= models(params[:api_version], 'User', 'Medal', 'CompactUser', 'TopSport', 'TrainingLog', 'TrainingGoal', 'Weight', 'SickDay', 'FreeEntry', 'WeeklyTarget', 'WellnessEntry') %>
}
