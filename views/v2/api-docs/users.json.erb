{
  "apiVersion":"2",
  "swaggerVersion":"1.2",
  "basePath":"<%= Const::BASE_URL %>/v2",
  "resourcePath":"/users",
  "apis":[
    {
      "path":"/users/{id}",
      "description":"Operations about users",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"Find user by ID",
          "responseClass":"User",
          "nickname":"show",
          "parameters":[
            {
              "name":"id",
              "paramType":"path",
              "required":true,
              "dataType":"long"
            }
          ],
          "errorResponses":<%= responses(404) %>
        }
      ]
    },
    {
      "path":"/users/search",
      "description":"Operations about friends",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"Search users",
          "responseClass":"List[CompactUser]",
          "nickname":"search",
          "parameters":[
            {
              "name":"q",
              "paramType":"query",
              "required":true,
              "dataType":"string"
            },
            {
              "name":"colleagues",
              "description":"When 'true' returns only colleagues from all organizations where you member.",
              "paramType":"query",
              "dataType":"string",
              "allowableValues":{
                "valueType":"LIST",
                "values":[
                  "true"
                ]
              }
            },
            {
              "name":"organisation_id",
              "description":"Restricts search by one particular organization.",
              "paramType":"query",
              "dataType":"int"
            },
            <%= param_page %>,
            <%= param_per_page %>
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    {
      "path":"/users/invite",
      "description":"Invite people by email",
      "operations":[
        {
          "httpMethod":"POST",
          "summary":"Invite users",
          "responseClass":"void",
          "nickname":"invite",
          "parameters":[
            {
              "name":"email",
              "description":"User email.",
              "paramType":"form",
              "required":true,
              "dataType":"string"
            },
            {
              "name":"subject",
              "paramType":"form",
              "dataType":"string",
              "required":true,
              "description":"Subject of email."
            },
            {
              "name":"message",
              "paramType":"form",
              "dataType":"text",
              "description":"Weâ€™ll add a link to accept your invitation and send some explanatory text."
            }
          ],
          "errorResponses":<%= responses(400) %>
        }
      ]
    },
    {
      "path":"/users/{user_id}/items",
      "description":"Operations about items",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"Items of user specified by user_id",
          "responseClass":"List[Item]",
          "nickname":"items_index",
          "parameters":[
            <%= param_user_id %>,
            <%= param_year %>,
            <%= param_page %>,
            <%= param_per_page %>
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    <%= erb :'shared/_years.json', { :locals => { :resource => '/users/{user_id}/items/years' } } %>,
    {
      "path":"/users/{user_id}/medals",
      "description":"Operations about medals",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"Medals of user specified by user_id",
          "responseClass":"List[Medal]",
          "nickname":"medals_index",
          "parameters":[
            <%= param_user_id %>,
            <%= param_year %>,
            <%= param_page %>,
            <%= param_per_page %>
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    <%= erb :'shared/_years.json', { :locals => { :resource => '/users/{user_id}/medals/years' } } %>,
    {
      "path":"/users/{user_id}/friends",
      "description":"Operations about friends",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"User's friends",
          "responseClass":"List[CompactUser]",
          "nickname":"user_friends",
          "parameters":[
            <%= param_user_id %>,
            <%= param_page %>,
            <%= param_per_page %>
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    {
      "path":"/users/{user_id}/personal_programs",
      "description":"Operations about personal_programs",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"Finds personal programs",
          "responseClass":"List[PersonalProgram]",
          "nickname":"personal_programs_index",
          "parameters":[
            <%= param_year %>,
            <%= param_page %>,
            <%= param_per_page %>,
            {
              "name":"status",
              "paramType":"query",
              "required":true,
              "dataType":"string",
              "defaultValue":"all",
              "allowableValues":{
                "valueType":"LIST",
                "values":["all", "ongoing"]
              }
            }
          ],
          "errorResponses":[
            {
              "code":400,
              "reason":"The request was invalid."
            }
          ]
        },
        {
          "httpMethod":"POST",
          "summary":"Add a new personal program",
          "responseClass":"PersonalProgram",
          "nickname":"create",
          "parameters":[
            <%= param_program_id %>,
            {
              "name":"start_date",
              "paramType":"form",
              "description":"Only monday",
              "required":true,
              "dataType":"Date"
            }
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    {
      "path":"/users/{user_id}/planned_surveys",
      "description":"Operations about planned surveys",
      "operations":[
        {
          "httpMethod":"POST",
          "summary":"Add a new planned survey",
          "responseClass":"PlannedSurvey",
          "nickname":"create",
          "parameters":[
            <%= param_survey_id %>,
            <%= param_required_date %>,
            {
              "name":"recurrence_type",
              "paramType":"form",
              "dataType":"string",
              "description":"This event recurs for (N) days/weeks.",
              "required":true,
              "allowableValues":{
                "valueType":"LIST",
                "values":["week", "day"]
              }
            },
            {
              "name":"recurrence_times",
              "paramType":"form",
              "dataType":"int",
              "required":true
            }
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    {
      "path":"/users/{user_id}/training_goals",
      "description":"Operations about training goals",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"List of user training goals",
          "responseClass":"List[TrainingGoal]",
          "nickname":"training_goals_index",
          "parameters":[
            <%= param_year %>,
            <%= param_page %>,
            <%= param_per_page %>
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    <%= erb :'shared/_years.json', { :locals => { :resource => '/users/{user_id}/training_goals/years' } } %>,
    {
      "path":"/users/{user_id}/weights",
      "description":"Operations about weights",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"List of user weights",
          "responseClass":"List[Weight]",
          "nickname":"weights_index",
          "parameters":[
            <%= param_user_id %>,
            <%= param_year %>,
            <%= param_page %>,
            <%= param_per_page %>
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    <%= erb :'shared/_years.json', { :locals => { :resource => '/users/{user_id}/weights/years' } } %>,
    {
      "path":"/users/{user_id}/sick_days",
      "description":"Operations about sick days",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"List of user sick days",
          "responseClass":"List[SickDay]",
          "nickname":"sick_days_index",
          "parameters":[
            <%= param_user_id %>,
            <%= param_year %>,
            <%= param_page %>,
            <%= param_per_page %>
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    <%= erb :'shared/_years.json', { :locals => { :resource => '/users/{user_id}/sick_days/years' } } %>,
    {
      "path":"/users/{user_id}/daily_stats",
      "description":"Operations for accessing daily statistics",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"List of user's daily statistics",
          "responseClass":"List[DailyStatistic]",
          "nickname":"daily_statistics_index",
          "parameters":[
            <%= param_user_id %>,
            {
              "name":"since",
              "description":"The date (e.g. 2015-09-18) since when to return the daily statistics",
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":"days",
              "description":"The number of days for which to return statistics",
              "paramType": "query",
              "dataType": "int"
            }
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    {
      "path":"/users/{user_id}/monthly_stats",
      "description":"Operations for accessing monthly statistics",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"List of user's monthly statistics",
          "responseClass":"List[MonthlyStatistic]",
          "nickname":"monthly_statistics_index",
          "parameters":[
            <%= param_user_id %>,
            {
              "name":"since",
              "description":"The month (e.g. 2015-09) since when to return the monthly statistics",
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":"months",
              "description":"The number of months for which to return statistics",
              "paramType": "query",
              "dataType": "int"
            }
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    {
      "path":"/users/{user_id}/free_entries",
      "description":"Operations about free entries",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"List of user free entries",
          "responseClass":"List[FreeEntry]",
          "nickname":"free_entries_index",
          "parameters":[
            <%= param_user_id %>,
            <%= param_year %>,
            <%= param_page %>,
            <%= param_per_page %>
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    <%= erb :'shared/_years.json', { :locals => { :resource => '/users/{user_id}/free_entries/years' } } %>,
    {
      "path":"/users/{user_id}/team_memberships",
      "description":"Operations for managing team memberships",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"List of user's team memberships",
          "responseClass":"List[TeamMembership]",
          "nickname":"team_memberships_index",
          "parameters":[
            <%= param_user_id %>,
            {
              "name":"organisation_id",
              "description":"Optional filter for returning team memberships only for the given organisation",
              "required":false,
              "paramType":"query",
              "dataType":"long"
            },
            <%= param_page %>,
            <%= param_per_page %>
          ],
          "errorResponses":<%= responses(400, 404) %>
        },
        {
          "httpMethod":"POST",
          "summary":"Join a team or request to join a team",
          "responseClass":"TeamMembership",
          "nickname":"team_membership_create",
          "parameters":[
            <%= param_user_id %>,
            {
              "name":"team_id",
              "description":"Identifier of the team to join",
              "required":true,
              "paramType":"form",
              "dataType":"long"
            }
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    {
      "path":"/users/{user_id}/team_memberships/{id}",
      "description":"Operations for managing team memberships",
      "operations":[
        {
          "httpMethod":"DELETE",
          "summary":"Unjoin a team",
          "responseClass":"void",
          "nickname":"unjoin_team",
          "parameters":[
            <%= param_user_id %>,
            {
              "name": "id",
              "description": "The id of the team membership",
              "paramType": "path",
              "required": true,
              "dataType": "long"
            }
          ],
          "errorResponses":<%= responses(404) %>
        }
      ]
    },
    {
      "path":"/users/{user_id}/training_logs",
      "description":"Operations about training logs",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"List of user training logs",
          "responseClass":"List[TrainingLog]",
          "nickname":"training_logs_index",
          "parameters":[
            <%= param_user_id %>,
            <%= param_training_log_status %>,
            <%= param_year %>,
            <%= param_page %>,
            <%= param_per_page %>
          ],
          "errorResponses":<%= responses(400, 404) %>
        },
        <%= erb :'shared/training_logs/_create.json' %>
      ]
    },
    <%= erb :'shared/_years.json', { :locals => { :resource => '/users/{user_id}/training_logs/years' } } %>,
    {
      "path":"/users/{user_id}/top_sports",
      "description":"Operations about top sports",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"List of user top sports",
          "responseClass":"List[TopSport]",
          "nickname":"top_sports_index",
          "parameters":[
            <%= param_user_id %>,
            <%= param_year %>,
            <%= param_page %>,
            <%= param_per_page %>
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    {
      "path":"/users/{user_id}/top_sports/{id}",
      "description":"Operations about top sports",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"Get a sport statistic by sport id",
          "responseClass":"TopSport",
          "nickname":"show",
          "parameters":[
            <%= param_user_id %>,
            {
              "name":"id",
              "description":"The id of the sport",
              "paramType":"path",
              "required":true,
              "dataType":"long"
            },
            <%= param_year %>
          ],
          "errorResponses":<%= responses(404) %>
        }
      ]
    },
    {
      "path":"/users/{user_id}/weekly_targets",
      "description":"Operations for managing weekly targets",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"List of user's weekly targets",
          "responseClass":"List[WeeklyTarget]",
          "nickname":"weekly_targets_index",
          "parameters":[
            <%= param_user_id %>,
            {
              "name":"since",
              "description":"The year and week number (e.g. 2015-38) since when to return the targets",
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":"weeks",
              "description":"The number of weekly targets to return",
              "paramType": "query",
              "dataType": "int"
            }
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    {
      "path":"/users/{user_id}/weekly_targets/current",
      "description":"Operations for managing weekly targets",
      "operations":[
        {
          "httpMethod":"PUT",
          "summary":"Sets current weekly target for the user",
          "responseClass":"WeeklyTarget",
          "nickname":"set_weekly_target",
          "parameters":[
            <%= param_user_id %>,
            {
              "name":"unit",
              "description":"Type of the weekly target metric",
              "paramType":"form",
              "dataType":"string",
              "required":true,
              "allowableValues":{
                "valueType":"LIST",
                "values":["hours", "exercises", "distance", "steps", "wellness_entries"]
              }
            },
            {
              "name":"target_amount",
              "paramType": "form",
              "dataType": "float"
            }
          ],
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    {
      "path":"/users/{user_id}/wellness_entries",
      "description":"Operations about wellness entries",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"List of user wellness entries",
          "responseClass":"List[WellnessEntry]",
          "nickname":"wellness_entries_index",
          "parameters":[
            <%= param_user_id %>,
            <%= param_wellness_entry_status %>,
            <%= param_year %>,
            <%= param_page %>,
            <%= param_per_page %>
          ],
          "errorResponses":<%= responses(400, 404) %>
        },
        <%= erb :'shared/wellness_entries/_create.json' %>
      ]
    },
    <%= erb :'shared/_years.json', { :locals => { :resource => '/users/{user_id}/wellness_entries/years' } } %>
  ],
  "models":<%= models(params[:api_version], 'User', 'Medal', 'CompactUser', 'TopSport', 'TrainingLog', 'TrainingGoal',
                      'Weight', 'SickDay', 'FreeEntry', 'DailyStatistic', 'MonthlyStatistic', 'WeeklyTarget',
                      'WellnessEntry', 'PlannedSurvey', 'TeamMembership') %>
}
