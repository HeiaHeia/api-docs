{
  "apiVersion":"2",
  "swaggerVersion":"1.2",
  "basePath":"<%= Const::BASE_URL %>/v2",
  "resourcePath":"/me",
  "apis":[
    {
      "path":"/me",
      "description":"Operations about logged in user",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"Logged in user",
          "responseClass":"User",
          "nickname":"show",
          "parameters":[],
          "errorResponses":<%= responses(400) %>
        },
        {
          "httpMethod":"DELETE",
          "summary":"Deletes the user account of the logged in user",
          "responseClass":"void",
          "nickname":"destroy",
          "parameters":[],
          "errorResponses":<%= responses(400) %>
        },
        {
          "httpMethod":"PUT",
          "summary":"Update logged in user",
          "responseClass":"User",
          "nickname":"update",
          "parameters":[
            {
              "name":"first_name",
              "paramType":"form",
              "dataType":"string"
            },
            {
              "name":"last_name",
              "paramType":"form",
              "dataType":"string"
            },
            {
              "name":"locale",
              "paramType":"form",
              "dataType":"string",
              "allowableValues":{
                "valueType":"LIST",
                "values":["de", "en", "es", "fi", "fr", "it", "ru", "se", "sl"]
              }
            },
            {
              "name":"measurement_units",
              "paramType":"form",
              "dataType":"string",
              "allowableValues":{
                "valueType":"LIST",
                "values":["metric", "imperial"]
              }
            },
            {
              "name":"privacy",
              "paramType":"form",
              "dataType":"string",
              "allowableValues":{
                "valueType":"LIST",
                "values": <%= Const::PRIVACIES.to_json %>
              }
            },
            {
              "name":"birthdate",
              "paramType":"form",
              "dataType":"Date",
              "description": "Format YYYY-MM-DD"
            },
            {
              "name":"gender",
              "paramType":"form",
              "dataType":"string",
              "allowableValues":{
                "valueType":"LIST",
                "values":["female", "male"]
              }
            },
            {
              "name":"my_sports",
              "paramType":"form",
              "dataType":"text"
            },
            {
              "name":"records_and_highlights",
              "paramType":"form",
              "dataType":"text"
            },
            {
              "name":"linked_with_mixpanel",
              "paramType":"form",
              "dataType":"boolean"
            },
            {
              "name":"daily_steps_target",
              "paramType":"form",
              "dataType":"int"
            },
            {
              "name":"sleep_target",
              "paramType":"form",
              "description":"Daily sleep target in minutes",
              "dataType":"int"
            }
          ],
          "errorResponses":<%= responses(400) %>
        }
      ]
    },
    {
      "path":"/me/avatar",
      "description":"Operations about user avatar",
      "operations":[
        {
          "httpMethod":"PUT",
          "summary":"Update user avatar",
          "responseClass":"CompactUser",
          "nickname":"update_avatar",
          "parameters":[
            {
              "name":"image",
              "paramType":"body",
              "dataType":"file",
              "description":"The image should be square size, support only .JPEG and .PNG format."
            }
          ],
          "errorResponses":<%= responses(400) %>
        },
        {
          "httpMethod":"DELETE",
          "summary":"Delete avatar",
          "responseClass":"void",
          "nickname":"destroy",
          "errorResponses":<%= responses(400, 404) %>
        }
      ]
    },
    {
      "path":"/me/consents",
      "description":"Operations for managing user consents",
      "operations":[
        {
          "httpMethod":"GET",
          "summary":"List the consents the user has given",
          "responseClass":"List[UserConsent]",
          "nickname":"list_consents",
          "parameters":[
            {
              "name":"scope",
              "paramType":"query",
              "dataType":"string",
              "description":"Restricts consents to return by scope. Supported scopes are 'hh' and 'org_surveys'."
            }
          ],
          "errorResponses":<%= responses(400) %>
        },
        {
          "httpMethod":"POST",
          "summary":"Adds new consent given by the user",
          "responseClass":"UserConsent",
          "nickname":"list_consents",
          "parameters":[
            {
              "name":"scope",
              "paramType":"form",
              "dataType":"string",
              "description":"The scope of the given consent. Supported scopes are 'hh' and 'org_surveys'."
            },
            {
              "name":"consent_type",
              "paramType":"form",
              "dataType":"string",
              "description":"The type of consent that was given. Supported types are 'terms_of_service' and 'privacy_policy'."
            }
          ],
          "errorResponses":<%= responses(400) %>
        }
      ]
    }
  ],
  "models":<%= models(params[:api_version], 'User', 'CompactUser', 'UserConsent') %>
}
